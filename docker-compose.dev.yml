version: '3.8'

services:
  # MySQL Database for Development
  medisync-db-dev:
    image: mysql:8.0
    container_name: medisync-mysql-dev
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: medisync_db
      MYSQL_USER: medisync
      MYSQL_PASSWORD: password
    volumes:
      - mysql_dev_data:/var/lib/mysql
    ports:
      - "3307:3306"
    networks:
      - medisync-dev-network

  # Backend Development Service
  medisync-backend-dev:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: medisync-backend-dev
    restart: always
    depends_on:
      - medisync-db-dev
    environment:
      SPRING_PROFILES_ACTIVE: dev
      SPRING_DATASOURCE_URL: jdbc:mysql://medisync-db-dev:3306/medisync_db?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true
      SPRING_DATASOURCE_USERNAME: medisync
      SPRING_DATASOURCE_PASSWORD: password
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SPRING_JPA_SHOW_SQL: true
      MEDISYNC_APP_JWT_SECRET: mediSyncDevSecretKey2024
      MEDISYNC_APP_JWT_EXPIRATION_MS: 86400000
      MEDISYNC_APP_FRONTEND_URL: http://localhost:3000
    volumes:
      - ./backend/src:/app/src
      - ./backend/target:/app/target
    ports:
      - "8081:8080"
    networks:
      - medisync-dev-network

  # Frontend Development Service
  medisync-frontend-dev:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: medisync-frontend-dev
    restart: always
    environment:
      REACT_APP_API_URL: http://localhost:8081/api
      CHOKIDAR_USEPOLLING: "true"
      WATCHPACK_POLLING: "true"
    volumes:
      - ./frontend/src:/app/src
      - ./frontend/public:/app/public
      - /app/node_modules
    ports:
      - "3001:3000"
    networks:
      - medisync-dev-network
    stdin_open: true
    tty: true

volumes:
  mysql_dev_data:
    driver: local

networks:
  medisync-dev-network:
    driver: bridge
